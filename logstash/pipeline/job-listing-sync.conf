input{
    jdbc{
        jdbc_connection_string => "jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_DATABASE}"
        jdbc_user => "${DATABASE_USER}"
        jdbc_password => "${DATABASE_PASSWORD}"
        jdbc_driver_class => "org.postgresql.Driver"
        jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/postgresql-42.7.3.jar"
        jdbc_paging_enabled => true
        jdbc_page_size => 500
        use_column_value => true
        tracking_column => "updated_at"
        tracking_column_type => "timestamp"
        clean_run => true
        schedule => "*/10 * * * * *"
        statement => "
        SELECT job_listings.*,
        (
          to_jsonb(users) ||
          jsonb_build_object('business_place', to_jsonb(user_business_places))
        )::text as user,
        to_jsonb(business_places)::text as business_place,
        (to_jsonb(job_positions) || 
          jsonb_build_object('translations', (SELECT jsonb_agg(to_jsonb(job_position_translations))
          FROM job_position_translations
          WHERE job_position_translations.job_position_id = job_positions.id))
        )::text as position
        FROM job_listings
        JOIN business_places ON job_listings.business_place_id = business_places.id
        JOIN job_positions ON job_listings.position_id = job_positions.id
        JOIN users ON job_listings.user_id = users.id
        JOIN business_places as user_business_places ON users.business_place_id = user_business_places.id
        WHERE job_listings.updated_at > :sql_last_value AND job_listings.updated_at < CURRENT_TIMESTAMP
        ORDER BY job_listings.updated_at ASC
        "
    }
}
filter{
    mutate{
        copy => {"id" => "[@metadata][_id]"}
        remove_field => ["@version"]
    }
}
output{

    elasticsearch{
        hosts => "elasticsearch:9200"
        user => "logstash_internal"
        password => "${LOGSTASH_INTERNAL_PASSWORD}"
        index => "circle-job-listings"
        document_id => "%{[@metadata][_id]}"
        pipeline => "circle-job-listings"
    }
}